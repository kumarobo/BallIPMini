// Balance Robot Contoller

#include "xc.h"
#include <p33Exxxx.h>
#include <stdbool.h>
#include "BRC_PinDef.csv"  // pin definition header generated by Excel

#define BRC_FCYMHZ 64 // not changable

extern void BRC_SetupClockPLL(void);
extern void BRC_SetupUSBClock(void);
extern void BRC_IORemap(void);
extern void BRC_InitializeSysClock(unsigned long Hz);
extern volatile long BRC_SysClock;

extern void BRC_InitializeLEDSW(void);
static inline void BRC_LEDRed(int onoff) { LAT_LEDRed=onoff; }
static inline void BRC_LEDGreen(int onoff) { LAT_LEDGreen=onoff; }
static inline int BRC_SWState(void) { return PORT_LEDSW; }

#define BRC_SetCWCCW BRC_SetCWCCW
extern void BRC_SetCWCCW(int ch,bool ccw);

extern void BRC_InitializeMotorPulse(void);
extern int BRC_OCxRPO(int ch);
extern void BRC_SetMotorSpeed(int ch,int vel);
extern int BRC_OCxRPO_MPCH(int ch);

extern void BRC_InitializeLEDSwitchBoard(void);
extern void BRC_LEDSwitchBoard_CycleTask(void);
#define BRC_LSB_CycleTask BRC_LEDSwitchBoard_CycleTask
extern bool BRC_LEDSwitchBoard_GetPush(void);  // on/off
#define BRC_LSB_GetPush BRC_LEDSwitchBoard_GetPush 
extern unsigned int BRC_LEDSwitchBoard_GetSwitch(void);
#define BRC_LSB_GetSW BRC_LEDSwitchBoard_GetSwitches 
extern void BRC_LEDSwitchBoard_SetSegmentsRaw(unsigned long segments);
#define BRC_LSB_SetLEDRaw BRC_LEDSwitchBoard_SetLEDRaw 
extern void BRC_LEDSwitchBoard_SetHex(unsigned int v);
extern void BRC_LEDSwitchBoard_SetLED(unsigned int leds);
extern void BRC_LEDSwitchBoard_SetLEDBits(int no,bool onoff);
extern void BRC_LEDSwitchBoard_SetUIntZS(unsigned int v,int zs);
extern void BRC_LEDSwitchBoard_SetSIntZS(int v,int zs);
#define BRC_LEDSwitchBoard_SetUInt(v) BRC_LEDSwitchBoard_SetUIntZS(v,0)
#define BRC_LEDSwitchBoard_SetSInt(v) BRC_LEDSwitchBoard_SetSIntZS(v,0)
extern void BRC_LEDSwitchBoard_SetDP(int dp);  // 0: lowest - 3

extern unsigned long BRC_LEDSwitchBoard_GetSwitchFull(void);

#define BRC_LSB_LB 16 /* Bit */
#define BRC_LSB_SB 24 /* Bit */

// Port bindings
#define BRC_LSB_CLK_TRIS TRIS_CCN24
#define BRC_LSB_CLK_LAT  LAT_CCN24
#define BRC_LSB_RCK_TRIS TRIS_CCN25
#define BRC_LSB_RCK_LAT  LAT_CCN25
#define BRC_LSB_LSD_TRIS TRIS_CCN26
#define BRC_LSB_LSD_LAT  LAT_CCN26
#define BRC_LSB_SSD_TRIS TRIS_CCN27
#define BRC_LSB_SSD_PORT PORT_CCN27


#define StartIORemap() __builtin_write_OSCCONL(OSCCONL&(~0x40));  // unlock RP
#define EndIORemap()   __builtin_write_OSCCONL(OSCCONL|0x40);  // lock RP


// number of MotorPulse channels
#define BRC_NMP 6

// Output Compare used for base period of MotorPulse
// Note: currently, this must be 1
#define BRC_MPBASEOC 1
// Output Compare usage list for MotorPulse in "a,b,c" form
#define BRC_MPOCLISTDEF 2,3,4,5,6,7
// unit frequency in inverse i.e. unit pulse period
#define BRC_MPUNITHZ_INV 2



